apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${project.artifactId}
spec:
  template:
    metadata:
      labels:
        name: ${project.artifactId}
    spec:
      containers:
        - image: ${project.groupId}/${project.artifactId}:${project.version}
          imagePullPolicy: IfNotPresent
          name: ${project.artifactId}
          readinessProbe:
            httpGet:
              path: ${kubernetes.readiness.path}
              port: ${docker.http.port}
            periodSeconds: ${kubernetes.check.period}
            timeoutSeconds: ${kubernetes.check.timeout}
            successThreshold: ${kubernetes.check.threshold.success}
            failureThreshold: ${kubernetes.check.threshold.failure}
          livenessProbe:
            httpGet:
              path: ${kubernetes.liveness.path}
              port: ${docker.http.port}
            periodSeconds: ${kubernetes.check.period}
            timeoutSeconds: ${kubernetes.check.timeout}
            successThreshold: ${kubernetes.check.threshold.success}
            failureThreshold: ${kubernetes.check.threshold.failure}
          volumeMounts:
            - name: ${project.artifactId}-service-config
              mountPath: /usr/verticles/${project.artifactId}/conf
      volumes:
        - name: ${project.artifactId}-service-config
          secret:
            secretName: ${project.artifactId}-service-config-secret
      restartPolicy: Always

